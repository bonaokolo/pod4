name: Deploy POD4 Website

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      TF_VAR_key_name: ${{ secrets.TF_VAR_KEY_NAME }}
      TF_VAR_private_key: ${{ secrets.TF_VAR_PRIVATE_KEY }}
      TF_VAR_existing_instance_id: ${{ secrets.TF_VAR_EXISTING_INSTANCE_ID }}
      TF_VAR_aws_region: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      EC2_KEY: ${{ secrets.EC2_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.1

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan

    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve

    - name: Get EC2 Public IP from Terraform Output
      id: get_ip
      working-directory: terraform
      run: |
        echo "Fetching instance IP..."
        IP=$(terraform output -raw instance_ip)
        echo "INSTANCE_IP=$IP" >> $GITHUB_ENV
        echo "Public IP: $IP"

    - name: Wait for EC2 to boot
      run: sleep 60

    - name: Decode EC2 private key
      run: |
        echo "$EC2_KEY" | base64 -d > key.pem
        chmod 600 key.pem

    - name: Deploy website to EC2
      run: |
        rsync -avz -e "ssh -o StrictHostKeyChecking=no -i key.pem" ./POD4/ ubuntu@$INSTANCE_IP:/tmp/pod4/
        
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@$INSTANCE_IP << 'EOF'
          if ! command -v nginx > /dev/null; then
            sudo apt update
            sudo apt install -y nginx
          fi
          sudo rm -rf /var/www/html/*
          sudo mv /tmp/pod4/* /var/www/html/
          sudo systemctl restart nginx
        EOF
